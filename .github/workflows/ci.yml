name: CI Integration with Allure Reporting

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chromium, firefox, webkit]  # Cross-browser testing

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.2'

      # Step 3: Install dependencies including Playwright and Allure through pip
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-playwright allure-pytest
          playwright install --with-deps  # Install Playwright browsers and dependencies

      # Step 4: Clean up the Allure results directory before tests
      - name: Clean Allure Results Directory
        run: rm -rf reports/allure-results/*

      # Step 5: Verify Allure Results Directory (for debugging purposes)
      - name: Verify Allure Results Directory
        run: |
          if [ ! -d "reports/allure-results" ]; then
            echo "Allure results directory not found! Exiting..."
            exit 1
          else
            echo "Allure results directory exists."
          fi

      # Step 6: Run the tests and generate Allure results
      - name: Run Tests
        run: |
          pytest --alluredir=reports/allure-results --browser=${{ matrix.browser }} --reruns 2 --timeout=60000 -vv || true
        env:
          PYTHONUNBUFFERED: 1

      # Step 7: Upload Allure report as an artifact to GitHub Actions (always runs)
      - name: Upload Allure Report
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: allure-report-${{ github.run_id }}-${{ matrix.browser }}
          path: reports/allure-results  # Upload the allure-results directory for downloading

      # Step 8: Upload Playwright Screenshots for Debugging (always runs)
      - name: Upload Playwright Screenshots
        if: ${{ always() }}  # Ensure this runs even if tests fail
        uses: actions/upload-artifact@v4
        with:
          name: playwright-screenshots-${{ github.run_id }}-${{ matrix.browser }}
          path: failure_*.png

      # Step 9: Generate Allure Report (runs even if tests fail)
      - name: Generate Allure Report
        run: |
          allure generate reports/allure-results --clean || echo "Allure report generation failed"
