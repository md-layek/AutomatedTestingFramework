#
#name: CI Integration with Allure Reporting
#
#on:
#  push:
#    branches:
#      - main
#  pull_request:
#    branches:
#      - main
#
#jobs:
#  test:
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        browser: [chromium, firefox, webkit]
#
#    steps:
#      - name: Checkout Code
#        uses: actions/checkout@v4
#
#      - name: Setup Node.js
#        uses: actions/setup-node@v4
#        with:
#          node-version: '20'
#
#      - name: Setup Python
#        uses: actions/setup-python@v4
#        with:
#          python-version: '3.12.2'
#
#      - name: Install Dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install pytest pytest-playwright allure-pytest pytest-rerunfailures pytest-timeout
#          playwright install --with-deps
#
#      - name: Install Allure CLI
#        run: pip install allure-commandline
#
#      - name: Ensure Allure Results Directory
#        run: mkdir -p reports/allure-results
#
#      - name: Ensure Logs Directory
#        run: mkdir -p logs
#
#      - name: Verify Allure Installation
#        run: allure --version
#
#      - name: Run Tests
#        run: |
#          pytest --alluredir=reports/allure-results --browser=${{ matrix.browser }} --reruns 2 --timeout=300000 -vv | tee logs/pytest_output.log
#        env:
#          PYTHONUNBUFFERED: 1
#
#      - name: List Allure Results Directory
#        run: ls -l reports/allure-results
#
#      - name: Verify Allure Results Directory Exists
#        run: |
#          if [ ! -d "reports/allure-results" ]; then
#            echo "Allure results directory not found!"
#            exit 1
#          elif [ -z "$(ls -A reports/allure-results)" ]; then
#            echo "Allure results directory is empty!"
#            exit 1
#          else
#            echo "Allure results directory exists and contains files."
#          fi
#
#      - name: Generate Allure Report
#        run: allure generate reports/allure-results --clean || echo "Allure report generation failed"
#
#      - name: Upload Allure Results for Debugging
#        if: failure()
#        uses: actions/upload-artifact@v4
#        with:
#          name: allure-results-${{ github.run_id }}
#          path: reports/allure-results
#
#      - name: Upload Pytest Logs for Debugging
#        if: failure()
#        uses: actions/upload-artifact@v4
#        with:
#          name: pytest-logs-${{ github.run_id }}
#          path: logs/pytest_output.log


name: CI Integration with Allure Reporting

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chromium, firefox, webkit]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.2'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-playwright allure-pytest pytest-rerunfailures pytest-timeout
          playwright install --with-deps

      - name: Install Allure CLI
        run: |
          pip install allure-commandline
          allure --version || echo "Allure CLI installation failed."

      - name: Ensure Allure Results Directory
        run: mkdir -p reports/allure-results

      - name: Ensure Logs Directory
        run: mkdir -p logs

      - name: Debug WebKit Installation
        run: |
          npx playwright install webkit
          npx playwright --version

      - name: Run Tests
        run: |
          pytest --alluredir=reports/allure-results --browser=${{ matrix.browser }} --reruns 3 --timeout=300000 -vv | tee logs/pytest_output.log
        env:
          PYTHONUNBUFFERED: 1

      - name: Debug Allure Results Directory
        run: ls -l reports/allure-results

      - name: Upload Allure Report
        uses: actions/upload-artifact@v4
        with:
          name: allure-report-${{ matrix.browser }}-${{ github.run_id }}
          path: reports/allure-results

      - name: Upload Pytest Logs for Debugging
        uses: actions/upload-artifact@v4
        with:
          name: pytest-logs-${{ matrix.browser }}-${{ github.run_id }}
          path: logs/pytest_output.log
